{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchStreams();\n\t}\n\trenderAdmin(stream) {\n\t\tif (stream.userId === this.props.currentUserId) {\n\t\t\treturn (\n\t\t\t\t<div className='right floated content'>\n\t\t\t\t\t<Link to={`/streams/edit/${stream.id}`} className='ui button primary'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/streams/delete/${stream.id}`}\n\t\t\t\t\t\tclassName='ui button negative'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trenderList() {\n\t\treturn this.props.streams.map(stream => {\n\t\t\treturn (\n\t\t\t\t<div className='item' key={stream.id}>\n\t\t\t\t\t{this.renderAdmin(stream)}\n\t\t\t\t\t<i className='large middle aligned icon camera' />\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t<Link to={`/streams/${stream.id}`} className='header'>\n\t\t\t\t\t\t\t{stream.title}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='description'>{stream.description}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trenderCreate() {\n\t\tif (this.props.isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<div style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Link to='/streams/new' className='ui button primary'>\n\t\t\t\t\t\tCreate Stream\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Streams</h2>\n\t\t\t\t<div className='ui celled list'>{this.renderList()}</div>\n\t\t\t\t{this.renderCreate()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tstreams: Object.values(state.streams),\n\t\tcurrentUserId: state.auth.userId,\n\t\tisSignedIn: state.auth.isSignedIn,\n\t};\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}