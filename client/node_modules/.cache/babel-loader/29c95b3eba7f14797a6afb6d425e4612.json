{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return 'Loading...';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textTransform: 'uppercase'\n        },\n        children: this.props.stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this), \"Description:\", this.props.stream.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","textTransform","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,YAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACxCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACvB,aAAO,YAAP;AACA;;AACD,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAX;AAAA,kBACE,KAAKN,KAAL,CAAWK,MAAX,CAAkBE;AADpB;AAAA;AAAA;AAAA;AAAA,cADD,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,kBAKc,KAAKP,KAAL,CAAWK,MAAX,CAAkBG,WALhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAjBuC;;AAoBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACA,CAFD;;AAGA,eAAeV,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../actions';\nimport StreamForm from './StreamForm';\nclass StreamEdit extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchStream(this.props.match.params.id);\n\t}\n\trender() {\n\t\tif (!this.props.stream) {\n\t\t\treturn 'Loading...';\n\t\t}\n\t\treturn (\n\t\t\t<div className='m-1'>\n\t\t\t\t<h2 style={{ textTransform: 'uppercase' }}>\n\t\t\t\t\t{this.props.stream.title}\n\t\t\t\t</h2>\n\t\t\t\t{<br />}\n\t\t\t\tDescription:{this.props.stream.description}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}