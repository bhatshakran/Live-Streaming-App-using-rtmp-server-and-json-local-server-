{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/practice/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errMsg: ''\n    };\n  }\n\n  // as soon as the compount mounts we want to send an api request\n  // to get the users location\n  CompountDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        errMsg: err.message\n      });\n    });\n  }\n\n  render() {\n    if (this.state.errMsg && !this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Error:\", this.state.errMsg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/practice/src/index.js"],"names":["React","ReactDOM","App","Component","state","lat","errMsg","CompountDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACPC,MAAAA,GAAG,EAAE,IADE;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADyB;AAAA;;AAMjC;AACA;AACAC,EAAAA,gBAAgB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACCC,QAAQ,IAAI;AACX,WAAKC,QAAL,CAAc;AAAER,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,OAAd;AACA,KAHF,EAICC,GAAG,IAAI;AACN,WAAKH,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEU,GAAG,CAACC;AAAd,OAAd;AACA,KANF;AAQA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKd,KAAL,CAAWE,MAAX,IAAqB,CAAC,KAAKF,KAAL,CAAWC,GAArC,EAA0C;AACzC,0BACC;AAAA,+BACC;AAAA,+BAAW,KAAKD,KAAL,CAAWE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAKA;AACD;;AA3BgC;;AA8BlCL,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n\tstate = {\n\t\tlat: null,\n\t\terrMsg: '',\n\t};\n\n\t// as soon as the compount mounts we want to send an api request\n\t// to get the users location\n\tCompountDidMount() {\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t\tposition => {\n\t\t\t\tthis.setState({ lat: position.coords.latitude });\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tthis.setState({ errMsg: err.message });\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\tif (this.state.errMsg && !this.state.lat) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Error:{this.state.errMsg}</h2>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}