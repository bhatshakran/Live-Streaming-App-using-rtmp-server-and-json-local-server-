{"ast":null,"code":"import _ from 'lodash';\nimport jsonTypicode from '../apis/jsonTypicode';\nexport const fetchPostsAndUser = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  const userIds = _.uniq(_.map(getState().posts, 'userId'));\n\n  userIds.forEach(id => dispatch(fetchUser(id)));\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonTypicode.get('/posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonTypicode.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data.id\n  });\n};","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/practice/src/actions/index.js"],"names":["_","jsonTypicode","fetchPostsAndUser","dispatch","getState","fetchPosts","userIds","uniq","map","posts","forEach","id","fetchUser","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AACA,QAAMC,OAAO,GAAGN,CAAC,CAACO,IAAF,CAAOP,CAAC,CAACQ,GAAF,CAAMJ,QAAQ,GAAGK,KAAjB,EAAwB,QAAxB,CAAP,CAAhB;;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAA9B;AACA,CAJM;AAMP,OAAO,MAAMN,UAAU,GAAG,MAAM,MAAMF,QAAN,IAAkB;AACjD,QAAMU,QAAQ,GAAG,MAAMZ,YAAY,CAACa,GAAb,CAAiB,QAAjB,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAML,SAAS,GAAGD,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAChD,QAAMU,QAAQ,GAAG,MAAMZ,YAAY,CAACa,GAAb,CAAkB,UAASH,EAAG,EAA9B,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcN;AAA7C,GAAD,CAAR;AACA,CAHM","sourcesContent":["import _ from 'lodash';\nimport jsonTypicode from '../apis/jsonTypicode';\n\nexport const fetchPostsAndUser = () => async (dispatch, getState) => {\n\tawait dispatch(fetchPosts());\n\tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\n\tuserIds.forEach(id => dispatch(fetchUser(id)));\n};\n\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonTypicode.get('/posts');\n\tdispatch({ type: 'FETCH_POSTS', payload: response.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonTypicode.get(`/users/${id}`);\n\tdispatch({ type: 'FETCH_USER', payload: response.data.id });\n};\n"]},"metadata":{},"sourceType":"module"}