{"ast":null,"code":"/**\n * Expose `debug()` as the module.\n */\nmodule.exports = debug;\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function () {};\n  return function (fmt) {\n    fmt = coerce(fmt);\n    var curr = new Date();\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n    fmt = name + ' ' + fmt + ' +' + debug.humanize(ms); // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n\n    window.console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n  };\n}\n/**\n * The currently active debug mode names.\n */\n\n\ndebug.names = [];\ndebug.skips = [];\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function (name) {\n  try {\n    localStorage.debug = name;\n  } catch (e) {}\n\n  var split = (name || '').split(/[\\s,]+/),\n      len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    } else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\ndebug.disable = function () {\n  debug.enable('');\n};\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\n\ndebug.humanize = function (ms) {\n  var sec = 1000,\n      min = 60 * 1000,\n      hour = 60 * min;\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\ndebug.enabled = function (name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Coerce `val`.\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n} // persist\n\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch (e) {}","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/twitchClone/client/node_modules/flv/node_modules/debug/debug.js"],"names":["module","exports","debug","name","enabled","fmt","coerce","curr","Date","ms","humanize","window","console","log","Function","prototype","apply","call","arguments","names","skips","enable","localStorage","e","split","len","length","i","replace","push","RegExp","substr","disable","sec","min","hour","toFixed","test","val","Error","stack","message"],"mappings":"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","sourcesContent":["\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n"]},"metadata":{},"sourceType":"script"}