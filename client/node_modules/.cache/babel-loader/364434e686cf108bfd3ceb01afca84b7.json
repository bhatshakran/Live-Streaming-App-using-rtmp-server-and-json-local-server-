{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../components/Modal';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.deleteStream(id),\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/twitchClone/client/src/streams/StreamDelete.js"],"names":["React","Modal","connect","fetchStream","deleteStream","Link","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","history","push","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,YAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAC1CC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;AAEDC,EAAAA,aAAa,GAAG;AACf,UAAM;AAAED,MAAAA;AAAF,QAAS,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AAEA,wBACC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AACC,QAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWL,YAAX,CAAwBQ,EAAxB,CADhB;AAEC,QAAA,SAAS,EAAC,oBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAMC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAEDE,EAAAA,aAAa,GAAG;AACf,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACvB,aAAO,8CAAP;AACA;;AAED,WAAQ,0DAAyD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAAzF;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,KAAD;AACC,MAAA,KAAK,EAAC,eADP;AAEC,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFV;AAGC,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHV;AAIC,MAAA,SAAS,EAAE,MAAMK,OAAO,CAACC,IAAR,CAAa,GAAb;AAJlB;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAvCyC;;AA0C3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACA,CAFD;;AAIA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACdE,YADc,CAAf","sourcesContent":["import React from 'react';\n\nimport Modal from '../components/Modal';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamDelete extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchStream(this.props.match.params.id);\n\t}\n\n\trenderActions() {\n\t\tconst { id } = this.props.match.params;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.props.deleteStream(id)}\n\t\t\t\t\tclassName='ui button negative'>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t\t<Link to='/' className='ui button'>\n\t\t\t\t\tCancel\n\t\t\t\t</Link>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\trenderContent() {\n\t\tif (!this.props.stream) {\n\t\t\treturn 'Are you sure you want to delete this stream?';\n\t\t}\n\n\t\treturn `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle='Delete Stream'\n\t\t\t\tcontent={this.renderContent()}\n\t\t\t\tactions={this.renderActions()}\n\t\t\t\tonDismiss={() => history.push('/')}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n\tStreamDelete\n);\n"]},"metadata":{},"sourceType":"module"}