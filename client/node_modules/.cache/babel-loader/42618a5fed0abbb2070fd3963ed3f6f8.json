{"ast":null,"code":"import _ from 'lodash';\nimport jsonTypicode from '../apis/jsonTypicode'; // export const fetchPostsAndUser = () => async (dispatch, getState) => {\n// \tawait dispatch(fetchPosts());\n// \tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\n// \tuserIds.forEach(id => dispatch(fetchUser(id)));\n// };\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonTypicode.get('/posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nexport const fetchUser = () => dispatch => _fetchUser(dispatch);\n\nconst _fetchUser = _.memoize(async dispatch => {\n  const response = await jsonTypicode.get(`/users`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n});","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/practice/src/actions/index.js"],"names":["_","jsonTypicode","fetchPosts","dispatch","response","get","type","payload","data","fetchUser","_fetchUser","memoize"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,GAAb,CAAiB,QAAjB,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAG,MAAMN,QAAQ,IAAIO,UAAU,CAACP,QAAD,CAA9C;;AACP,MAAMO,UAAU,GAAGV,CAAC,CAACW,OAAF,CAAU,MAAMR,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,GAAb,CAAkB,QAAlB,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAHkB,CAAnB","sourcesContent":["import _ from 'lodash';\nimport jsonTypicode from '../apis/jsonTypicode';\n\n// export const fetchPostsAndUser = () => async (dispatch, getState) => {\n// \tawait dispatch(fetchPosts());\n// \tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\n// \tuserIds.forEach(id => dispatch(fetchUser(id)));\n// };\n\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonTypicode.get('/posts');\n\tdispatch({ type: 'FETCH_POSTS', payload: response.data });\n};\n\nexport const fetchUser = () => dispatch => _fetchUser(dispatch);\nconst _fetchUser = _.memoize(async dispatch => {\n\tconst response = await jsonTypicode.get(`/users`);\n\tdispatch({ type: 'FETCH_USER', payload: response.data });\n});\n"]},"metadata":{},"sourceType":"module"}